{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Coda",
    "scopeName": "source.coda",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#constants"
        },
        {
            "include": "#members"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#builtInFunctions"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#controlStatements"
        },
        {
            "include": "#scopesAndFunctions"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.double-slash.coda",
                    "match": "//(.*?)(;|$)"
                }
            ]
        },
        "constants": {
            "patterns": [
                {
                    "name": "constant.character.coda",
                    "match": "\\b[A-Z_]+\\b"
                }
            ]
        },
        "members": {
            "patterns": [
                {
                    "name": "entity.name.method",
                    "match": "\\w+(\\.\\w+)+"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.coda",
                    "match": "\\b(let|const|def|if|elif|import|else|for|while|break|return|scope|continue|typeof|sizeof|do|in|native)\\b"
                },
                {
                    "name": "storage.type.coda",
                    "match": "\\b(int|bool|byte|float|list|object|double|string|long)\\b"
                }
            ]
        },
        "builtInFunctions": {
            "patterns": [
                {
                    "name": "support.function.builtin.coda",
                    "match": "\\b(print|println|sleep|input|parseInt|parseFloat|parseDouble|parseByte|parseBool|quit|exit)\\b"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.double.coda",
                    "begin": "\"",
                    "end": "\""
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.coda",
                    "match": "\\b\\d+\\b"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.coda",
                    "match": "[=+\\-*/%:=.,<>!;]"
                }
            ]
        },
        "controlStatements": {
            "patterns": [
                {
                    "name": "keyword.control.coda",
                    "match": "\\b(for|while|if|elif|else|break|return|do|continue)\\b"
                }
            ]
        },
        "scopesAndFunctions": {
            "patterns": [
                {
                    "name": "entity.name.function.coda",
                    "match": "\\bdef\\s+\\w+\\s*\\([^)]*\\)\\s*\\{",
                    "captures": {
                        "0": {
                            "name": "entity.name.function.coda"
                        },
                        "1": {
                            "name": "entity.name.variable.parameter.coda"
                        }
                    }
                },
                {
                    "name": "entity.name.scope.coda",
                    "match": "\\bscope\\s+\\w+\\s*\\{",
                    "captures": {
                        "0": {
                            "name": "entity.name.scope.coda"
                        }
                    }
                }
            ]
        }
    }
}